{"ast":null,"code":"var _jsxFileName = \"/Users/tomofumi/translationApp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [translated, setTranslated] = useState('');\n  const handleTranslate = async () => {\n    const response = await fetch('http://localhost:8000/translate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text,\n        target_lang: 'en'\n      }) // 例: 英語に翻訳\n    });\n    const data = await response.json();\n    setTranslated(data.translated_text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '3rem auto',\n      padding: '2rem',\n      boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n      borderRadius: '10px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#fdfdfd'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"\\u7FFB\\u8A33\\u30A2\\u30D7\\u30EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      rows: 5,\n      placeholder: \"\\u7FFB\\u8A33\\u3057\\u305F\\u3044\\u6587\\u7AE0\\u3092\\u5165\\u529B\",\n      style: {\n        width: '100%',\n        padding: '0.8rem',\n        borderRadius: '8px',\n        border: '1px solid #ccc',\n        resize: 'vertical',\n        fontSize: '1rem',\n        marginTop: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslate,\n      style: {\n        marginTop: '1rem',\n        width: '100%',\n        padding: '0.8rem',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '8px',\n        fontSize: '1rem',\n        cursor: 'pointer'\n      },\n      children: \"\\u7FFB\\u8A33\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), translated && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1.5rem',\n        padding: '1rem',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        backgroundColor: '#f9f9f9',\n        minHeight: '3rem',\n        whiteSpace: 'pre-wrap'\n      },\n      children: translated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JjWUjPv1WrPEkQzgsasXDPO+xw0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","text","setText","translated","setTranslated","handleTranslate","response","fetch","method","headers","body","JSON","stringify","target_lang","data","json","translated_text","style","maxWidth","margin","padding","boxShadow","borderRadius","fontFamily","backgroundColor","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","width","border","resize","fontSize","marginTop","onClick","cursor","minHeight","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/tomofumi/translationApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App: React.FC = () => {\n  const [text, setText] = useState('');\n  const [translated, setTranslated] = useState('');\n\n  const handleTranslate = async () => {\n    const response = await fetch('http://localhost:8000/translate', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ text, target_lang: 'en' }) // 例: 英語に翻訳\n    });\n    const data = await response.json();\n    setTranslated(data.translated_text);\n  };\n\n  return (\n    <div\n      style={{\n        maxWidth: '600px',\n        margin: '3rem auto',\n        padding: '2rem',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n        borderRadius: '10px',\n        fontFamily: 'Arial, sans-serif',\n        backgroundColor: '#fdfdfd',\n      }}\n    >\n      <h1 style={{ textAlign: 'center', color: '#333' }}>翻訳アプリ</h1>\n\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        rows={5}\n        placeholder=\"翻訳したい文章を入力\"\n        style={{\n          width: '100%',\n          padding: '0.8rem',\n          borderRadius: '8px',\n          border: '1px solid #ccc',\n          resize: 'vertical',\n          fontSize: '1rem',\n          marginTop: '1rem',\n        }}\n      />\n\n      <button\n        onClick={handleTranslate}\n        style={{\n          marginTop: '1rem',\n          width: '100%',\n          padding: '0.8rem',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '1rem',\n          cursor: 'pointer',\n        }}\n      >\n        翻訳\n      </button>\n\n      {translated && (\n        <div\n          style={{\n            marginTop: '1.5rem',\n            padding: '1rem',\n            border: '1px solid #ddd',\n            borderRadius: '8px',\n            backgroundColor: '#f9f9f9',\n            minHeight: '3rem',\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {translated}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}